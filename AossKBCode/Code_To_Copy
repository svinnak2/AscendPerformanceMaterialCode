from sentence_transformers import SentenceTransformer, util

# Load BERT Model for Semantic Similarity
model = SentenceTransformer("all-MiniLM-L6-v2")  # Lightweight & fast model

# Read content from file1.txt
with open("/home/output/file1.txt", "r", encoding="utf-8") as f:
    text1 = f.read().strip()

# Read content from file2.txt
with open("/home/output/file2.txt", "r", encoding="utf-8") as f:
    text2 = f.read().strip()

# Generate BERT embeddings
embedding1 = model.encode(text1, convert_to_tensor=True)
embedding2 = model.encode(text2, convert_to_tensor=True)

# Compute Cosine Similarity
similarity_score = util.pytorch_cos_sim(embedding1, embedding2).item()

# Display Similarity Score
print(f"üîç Semantic Similarity Score: {similarity_score:.4f}")

# Interpretation
if similarity_score > 0.8:
    print("‚úÖ The files are highly similar.")
elif similarity_score > 0.5:
    print("‚ö†Ô∏è The files have moderate similarity.")
else:
    print("‚ùå The files are different.")




# Read file content
with open(file1_path, "r", encoding="utf-8") as f1, open(file2_path, "r", encoding="utf-8") as f2:
    text1 = f1.read().strip()
    text2 = f2.read().strip()
