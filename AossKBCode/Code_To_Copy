import streamlit as st
import boto3
import os
import pandas as pd
import json
import PyPDF2
import pdfplumber

# Function to upload files to S3 (optional if you want to store the files in S3)
def upload_file_to_s3(file, bucket, s3_path):
    s3 = boto3.client('s3')
    s3.upload_fileobj(file, bucket, s3_path)

# Streamlit file uploader
st.title('File Selector in SageMaker using Streamlit')

# File Uploader widget
uploaded_file = st.file_uploader("Choose a file", type=["csv", "txt", "json", "pdf"])

if uploaded_file is not None:
    # Display file details
    st.write("Filename: ", uploaded_file.name)
    st.write("File type: ", uploaded_file.type)
    st.write("File size: ", uploaded_file.size, " bytes")

    # Read and display file content
    if uploaded_file.type == "text/csv":
        df = pd.read_csv(uploaded_file)
        st.write("File Content (CSV):")
        st.dataframe(df)
        
    elif uploaded_file.type == "application/json":
        data = json.load(uploaded_file)
        st.write("File Content (JSON):")
        st.json(data)
        
    elif uploaded_file.type == "text/plain":
        st.write("File Content (Text):")
        st.text(uploaded_file.read().decode("utf-8"))
    
    elif uploaded_file.type == "application/pdf":
        st.write("File Content (PDF):")
        
        # Option 1: Using PyPDF2
        try:
            pdf_reader = PyPDF2.PdfReader(uploaded_file)
            pdf_text = ""
            for page_num in range(len(pdf_reader.pages)):
                page = pdf_reader.pages[page_num]
                pdf_text += page.extract_text()
            st.text(pdf_text)
        except Exception as e:
            st.error(f"Error reading PDF with PyPDF2: {e}")
        
        # Option 2: Using pdfplumber (for better text extraction)
        with pdfplumber.open(uploaded_file) as pdf:
            pdf_text_plumber = ""
            for page in pdf.pages:
                pdf_text_plumber += page.extract_text()
            st.text(pdf_text_plumber)

    # Optionally upload to S3
    bucket_name = st.text_input("S3 Bucket Name (Optional, if you want to upload)")
    s3_path = st.text_input("S3 Path (Optional)")
    
    if st.button('Upload to S3') and bucket_name and s3_path:
        upload_file_to_s3(uploaded_file, bucket_name, s3_path)
        st.success(f"File uploaded to {bucket_name}/{s3_path} successfully!")
